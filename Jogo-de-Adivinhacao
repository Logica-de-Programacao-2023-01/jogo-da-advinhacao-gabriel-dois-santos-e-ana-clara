package main

import (
	"fmt"
	"math/rand"
	"time"
)

func main() {
	fmt.Println("Bem-vindo ao jogo da adivinhação!")
	var tentativasMatriz [][]int

	for {
		resposta := gerarNumeroAleatorio()
		tentativas := jogarJogo(resposta)
		tentativasMatriz = append(tentativasMatriz, tentativas)
		exibirTentativasMatriz(tentativasMatriz)

		var jogarNovamente string
		fmt.Print("Você deseja jogar novamente? (s/n): ")
		fmt.Scanln(&jogarNovamente)

		if jogarNovamente != "s" {
			break
		}
	}

	for i, tentativas := range tentativasMatriz {
		fmt.Printf("Você utilizou %d tentativas na %dª jogada.\n", len(tentativas), i+1)
	}
}

func gerarNumeroAleatorio() int {
	rand.Seed(time.Now().UnixNano())
	return rand.Intn(100) + 1
}

func jogarJogo(resposta int) []int {
	var tentativas []int

	for {
		var palpite int
		fmt.Print("Digite um número entre 1 e 100: ")
		fmt.Scanln(&palpite)

		tentativas = append(tentativas, palpite)

		if palpite == resposta {
			fmt.Println("Parabéns, você acertou!")
			break
		} else if palpite < resposta {
			fmt.Println("O número é maior que", palpite)
		} else {
			fmt.Println("O número é menor que", palpite)
		}
	}

	return tentativas
}

func exibirTentativasMatriz(tentativasMatriz [][]int) {
	fmt.Println("Histórico de tentativas:")

	for i, tentativas := range tentativasMatriz {
		fmt.Printf("Jogada %d:\n", i+1)

		for _, palpite := range tentativas {
			fmt.Printf("Digite um número entre 1 e 100: %d\n", palpite)
			if palpite < tentativas[len(tentativas)-1] {
				fmt.Printf("O número é maior que %d.\n", palpite)
			} else {
				fmt.Printf("O número é menor que %d.\n", palpite)
			}
		}

		fmt.Printf("Parabéns, você acertou!\nVocê utilizou %d tentativas.\n\n", len(tentativas))
	}

	fmt.Println()
}
